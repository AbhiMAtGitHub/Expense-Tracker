openapi: 3.0.0
info:
  title: Expense Tracker API
  version: 1.0.0
  description: REST API for tracking income and expenses

servers:
  - url: http://localhost:4000
    description: Local server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Transaction:
      type: object
      properties:
        title:
          type: string
        amount:
          type: number
        type:
          type: string
          enum: [income, expense]
        category:
          type: string
        date:
          type: string
          format: date
    AuthRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
        password:
          type: string

security:
  - bearerAuth: []

paths:
  /api/auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthRequest"
      responses:
        "201":
          description: User created
        "400":
          description: Bad request

  /api/auth/login:
    post:
      summary: Login and get JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthRequest"
      responses:
        "200":
          description: Successful login

  /api/transactions:
    post:
      summary: Create one or more transactions
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/Transaction"
                - type: array
                  items:
                    $ref: "#/components/schemas/Transaction"
      responses:
        "201":
          description: Created successfully
    get:
      summary: Get all transactions
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
        - name: offset
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: OK

  /api/reports/monthly:
    get:
      summary: Get monthly income/expense summary
      security:
        - bearerAuth: []
      parameters:
        - name: year
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Monthly breakdown

  /api/reports/yearly:
    get:
      summary: Get yearly income/expense summary
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Yearly breakdown

  /api/transactions/{id}:
    put:
      summary: Update a transaction
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Transaction ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transaction"
      responses:
        "200":
          description: Transaction updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found

    delete:
      summary: Delete a transaction
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Transaction ID
          schema:
            type: string
      responses:
        "200":
          description: Transaction deleted successfully
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found
